.. _superdataset:

Querying metadata
-----------------

"We're almost at the end of the semester already!" begins our lecturer. "I've
kept one very exciting aspect of DataLad private, up to this point. But today
is the day we'll be talking about it: *metadata*".

.. figure:: ../artwork/src/metadata_intro.svg

:term:`Metadata` is data about data. It comes in many different types and exists
in multiple standards, but the overall purpose of metadata is to summarize basic
information about data to make tracking, querying, finding, or working with
specific data easier. This may seem like a minor or auxiliary task, but
creating, providing, and using sufficiently rich machine-and human-readable
metadata are core aspects in the
`FAIR principles <https://www.nature.com/articles/sdata201618>`_ that have
a substantial impact on `science <https://en.wikipedia.org/wiki/FAIR_data>`_
and became a key feature in
`policy-making <https://ec.europa.eu/research/participants/data/ref/h2020/grants_manual/hi/oa_pilot/h2020-hi-oa-data-mgt_en.pdf>`_.
Working with metadata, be it curating or using it, however, is not an easy task.

To make working with metadata easier, DataLad can automatically *extract*
(create), *aggregate* (store), and *query* (search) various metadata types and
standards in DataLad datasets, and allows to share metadata together with datasets.
This functionality can help to make your own data in datasets more **F**\indable,
**A**\ccessible, **I**\nteroperable, and **R**\eusable, and help you to discover
interesting data or datasets.

"Before we start, there is one important distinction in terminology", cautions
the lecturer. "The metadata we will be talking about in this lecture is different
from the dataset content identity and availability information we referred to as
"metadata" in chapter :ref:`installDS`. This previous type of metadata is obtained
with a :command:`datalad clone` and allows to explore of directory hierarchies,
file names, and information on annexed data such as its size, its availability,
and the locations at which copies are stored prior to any actual data download.
The meta data we will be talking about today, instead, is different:
It can describe dataset contents on arbitrary levels, and needs to be explicitly
created and/or accessed, using specialised commands and DataLad tools.
And the extracted and aggregated metadata on a dataset or its contents are managed
by DataLad itself and as somewhat hidden dataset-internal content."

The following sections will demonstrate how to make use of existing metadata
with queries and for data discovery, and also how to extract and aggregate
metadata yourself.
The following terminology is used:

- ``extract``: Create metadata about a dataset or specific dataset contents
- ``aggregate``: Extract metadata (potentially recursively across a hierarchy of
  datasets, or from subdatasets to higher level datasets) and store it in a
  portable internal format
- ``dump``: Report on aggregated metadata, either for files in a dataset or for
  a dataset as a whole.
- ``search``: Query aggregated metadata

DataLad's superdataset ``///``
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Prior to diving into the internals of DataLads metadata functionality,
let's start by looking into one example of how to make use of some existing
metadata.
DataLad provides uniform access to more than 60TB of scientific data and
its associated metadata via what is called ":term:`The DataLad superdataset ///`"
(abbreviated ``///``). It is an open-data collection of various, to a large extent
neuroscientific, data datasets. Each data dataset is a subdataset, nested within the
toplevel superdataset ``///``. Installing the superdataset thus makes a large number of
open datasets available to anyone, and is basically a handy shortcut for scientist in
this particular field. But because the superdataset includes aggregated
metadata on all its subdatasets, this resource not only allows to *obtain* (parts of)
this data uniformly, but also *search* this "superdataset" and hence
*discover* suitable datasets without the need to download the data first.

In DataLad-101, we will use this dataset to demonstrate how to discover
datasets with the :command:`datalad search` command
(:manpage:`datalad-search` manual). As a first step, it needs to be installed.
Unlike previous datasets we installed with a path or URL specification,
the DataLad superdataset can be installed by specifying ``///`` instead of
the path/URL. To follow along, please install this dataset somewhere outside of
``DataLad-101`` [#f1]_:

.. runrecord:: _examples/DL-101-150-101
   :language: console
   :workdir: dl-101

   $ datalad install ///

The DataLad superdataset contains many subdatasets:

.. runrecord:: _examples/DL-101-150-102
   :language: console
   :workdir: dl-101

   $ ls -a datasets.datalad.org

As seen in section :ref:`sharelocal1`, when installing a superdataset without
the ``--recursive`` flag, the subdatasets file hierarchy metadata is only available
after another ``datalad install path/to/subds``. Exploring any of the subdatasets file
hierarchies would thus require another :command:`datalad install` command.
However, discovering potentially relevant subdatasets works right away,
as the superdataset already contains aggregated metadata from all of its
subdatasets. This data can be found in ``.datalad/`` in the top-level dataset:

.. runrecord:: _examples/DL-101-150-103
   :language: console
   :workdir: dl-101

   $ cd datasets.datalad.org
   $ ls .datalad

.. index:: ! datalad command; search

This metadata allows to *search* this dataset and its contents.
The :command:`datalad search` command can search aggregated metadata.
This makes it possible to discover datasets, or individual files in a
dataset even when they are not available locally.

Consider a scientist that has not used DataLad before and decides to find
datasets which relate to their field of study: neuroimaging research using
movies as stimulation. Providing these two keywords yields a number of
datasets that could be of potential interest:

.. runrecord:: _examples/DL-101-150-104
   :language: console
   :workdir: dl-101/datasets.datalad.org

   $ datalad search neuroimaging movie


.. todo::

   elaborate on queries, talk about modes


.. rubric:: Footnotes

.. [#f1] Note that ``datalad install ///`` will install the DataLad superdataset
         into your current directory. ``datalad install -s /// path/to/destination``
         will let you specify a path.
         Note further that :term:`the DataLad superdataset ///` has a special meaning
         for the :command:`datalad search` command: If ``///`` is installed in its default
         location ``~/datalad`` (or if this configuration is appropriately adjusted
         to the path ``///`` was installed to with ``datalad.locations.default-dataset``),
         a :command:`datalad search` outside of
         a DataLad dataset will fall back to searching ``///`` automatically. Running
         :command:`datalad search` outside a DataLad dataset for the first time will
         start an interactive assistant to help with the installation for this
         functionality.
