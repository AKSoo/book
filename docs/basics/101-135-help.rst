.. _help:

How to get help
---------------

After all of the DataLad-101 lectures and tutorials so far,
you really begin to appreciate the pre-crafted examples the
lecturer provided the students with.

"Nothing really goes wrong, and if so, it's intended", you
acknowledge. "But how does this prepare me for life after
the course? I've seen a lot of different errors and know many
caveats and principles already, but I certainly will mess
something up at one point, and how will I get help then?"

Fortunately, the syllabus has a whole section on that, and on
one lazy, warm summer-afternoon you flip through it.

You realize that you already know the most important thins:
The number one advice on how to get help is
`"Read the error message." <http://memecrunch.com/meme/BT3A6/read-the-error-message/image.jpg>`_.
The second advice it
`"I'm not kidding: Read the error message <http://i.imgur.com/laG4tPr.jpg>`_.
The third advice, finally, says
`"Honestly, read the f***ing error message <http://poster.keepcalmandposters.com/default/5986752_keep_calm_and_read_the_error_message.png>`_.

Help yourself
^^^^^^^^^^^^^

If you run into a DataLad problem and you have followed the three
steps above, but the error message
`doesn't give you a clue on how to proceed <https://imgs.xkcd.com/comics/code_quality_3.png>`_,
the first you should do is

#. find out which *version* of DataLad you use

#. read the *help page* of the command that failed

The first step is important in order to find out whether a
command failed due to using a wrong DataLad version. In order
to use this book and follow along, your DataLad version
should be ``datalad-0.12`` or higher, for example.

To find out which version you are using, run

.. runrecord:: _examples/DL-101-135-101
   :language: console
   :workdir: dl-101/DataLad-101

   $ datalad --version

.. index:: ! datalad command; wtf

If you want a comprehensive overview of your full setup,
:command:`datalad wtf` is the command to turn to
(:manpage:`datalad-wtf` manual). Running this command will
generate a report about the DataLad installation and configuration.
The output below shows an excerpt.

.. runrecord:: _examples/DL-101-135-102
   :language: console
   :workdir: dl-101/DataLad-101
   :lines: 1-20

   $ datalad wtf

This lengthy output will report all information that might
be relevant -- from DataLad to :term:`Git-annex` or Python
up to your operating system.

The second step, finding and reading the help page of the command
in question, is important in order to find out how the
command that failed is used. Are arguments specified correctly?
Does the help list any caveats?

There are multiple ways to find help on DataLad commands.
You could turn to the `documentation <http://docs.datalad.org/>`_.
Alternatively, to get help right inside the terminal,
run any command with the ``-h``/``--help`` option (also shown
as an excerpt here):

.. runrecord:: _examples/DL-101-135-103
   :language: console
   :workdir: dl-101/DataLad-101
   :lines: 1-40

   $ datalad get --help

This for example is the help page on :command:`datalad get`
(the same you would find in the `documentation <docs.datalad.org>`__,
but in your terminal). It contains a command description, a list
of all the available options with a short explanation of them, and
example commands. The paragraph *Options* shows all
optional flags, and all required parts of
the command are listed in the paragraph *Arguments*. One first thing
to check for example is whether your command call
specified all of the required arguments.

Asking questions (right)
^^^^^^^^^^^^^^^^^^^^^^^^

If nothing you do on your own helps to solve the problem,
consider asking others. Check out `neurostars <https://neurostars.org/>`_
and search for your problem -- likely,
`somebody already encountered the same error before <http://imgs.xkcd.com/comics/wisdom_of_the_ancients.png>`_
and fixed it, but if not, just ask a new question with a ``datalad`` tag.

Make sure your question is as informative as it can be for others.
Include

- *context* -- what did you want to do and why

- the *problem* -- paste the error message (all of it), and provide the
  steps necessary to reproduce it

- *technical details* -- what version of DataLad are you using, what version
  of Git-annex, and which Git-annex repository type, what is your operating
  system and -- if applicable -- Python version? :command:`datalad wtf` is your friend
  to find all of this information.